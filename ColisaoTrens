

import java.util.InputMismatchException;
import java.util.Scanner;

public class ColisaoTrens {
    public static void main(String[] args) {
        while (true) {
            try {
                Scanner sc = new Scanner(System.in);
                double posicaoInicialA;
                double posicaoInicialB;
                double velocidadeA;
                double velocidadeB;
                double tempo;
                double posicaoColisao;

                System.out.println("\nINSIRA APENAS VALORES INTEIROS");

                while (true) {
                    System.out.println("Informe a posição inicial do trem A (de 0 a 10.000 km):");
                    posicaoInicialA = sc.nextDouble();
                    if (0 <= posicaoInicialA && posicaoInicialA <= 10000 && posicaoInicialA % 1 == 0) {
                        break;
                    }
                    System.out.println("Posição inicial inválida. Tente novamente.");
                }

                while (true) {
                    System.out.println("Informe a posição inicial do trem B (de 0 a 10.000 km):");
                    posicaoInicialB = sc.nextDouble();
                    if (0 <= posicaoInicialB && posicaoInicialB <= 10000 && posicaoInicialB % 1 == 0) {
                        break;
                    }
                    System.out.println("Posição inicial inválida. Tente novamente.");
                }

                while (true) {
                    System.out.println("Informe a velocidade do trem A (de 0 a 300 km/h):");
                    velocidadeA = sc.nextDouble();
                    if (0 <= velocidadeA && velocidadeA <= 300 && velocidadeA % 1 == 0) {
                        break;
                    }
                    System.out.println("Velocidade inválida. Tente novamente.");
                }

                while (true) {
                    System.out.println("Informe a velocidade do trem B (de -300 a 0 km/h):");
                    velocidadeB = sc.nextDouble();
                    if (-300 <= velocidadeB && velocidadeB <= 0 && velocidadeB % 1 == 0) {
                        break;
                    }
                    System.out.println("Velocidade inválida. Tente novamente.");
                }

                if (posicaoInicialA > posicaoInicialB) {
                    System.out.println("Como o Trem A está atrás do Trem B, não haverá colisão.");
                } else if (velocidadeA == 0 && velocidadeB == 0) {
                    System.out.println("Como ambas as velocidades são 0 km/h, não ocorrerá colisão entre esses trens.");
                } else {
                    tempo = (posicaoInicialA - posicaoInicialB) / (velocidadeB - velocidadeA);
                    posicaoColisao = posicaoInicialA + velocidadeA * tempo;
                    tempo = tempo * 3600;

                    int horaInicial = 17;
                    int minutoInicial = 0;
                    double horaColisao = horaInicial + tempo / 3600;
                    double minutoColisao = 0;
                    double aux;

                    if (tempo % 3600 != 0) {
                        aux = tempo - tempo / 3600;
                        minutoColisao = minutoInicial + (aux / 60);
                    }

                    System.out.printf("Colisão prevista no KM: %.1f, após %.0f segundos, às %.0fh %.0fm\n",
                            posicaoColisao, tempo, horaColisao, minutoColisao);
                }
            } catch (InputMismatchException e) {
                System.out.println("Entrada inválida. Tente novamente...");
            } finally {
                String continuar;
                while (true) {
                    Scanner sc = new Scanner(System.in);

                    System.out.println("\n\nDeseja continuar? [S/N]");
                    continuar = sc.next().toUpperCase();
                    if (continuar.equalsIgnoreCase("S") || continuar.equalsIgnoreCase("N")) {
                        break;
                    } else {
                        System.out.println("Resposta inválida. Tente novamente...");
                    }
                }
                if (continuar.equalsIgnoreCase("N")) {
                    break;
                }
            }
        }
    }
}
